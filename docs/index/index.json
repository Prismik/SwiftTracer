{"interfaceLanguages":{"swift":[{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/swifttracer\/texture\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Materials","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/materials","title":"Using materials","type":"article"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/checkerboard2d(color1:color2:uvscale:uvoffset:)","title":"case checkerboard2d(color1: Color, color2: Color, uvScale: Vec2, uvOffset: Vec2)","type":"case"},{"path":"\/documentation\/swifttracer\/texture\/constant(value:)","title":"case constant(value: Color)","type":"case"},{"path":"\/documentation\/swifttracer\/texture\/texturemap(values:scale:uvscale:uvoffset:)","title":"case textureMap(values: Array2d<Color>, scale: Float, uvScale: Vec2, uvOffset: Vec2)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/get(uv:p:)-2jdbd","title":"func get(uv: Vec2, p: Point3) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/texture\/get(uv:p:)-3kd7q","title":"func get(uv: Vec2, p: Point3) -> Float","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/color1","title":"case color1","type":"case"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/color2","title":"case color2","type":"case"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/filename","title":"case filename","type":"case"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/scale","title":"case scale","type":"case"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/type","title":"case type","type":"case"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/uvoffset","title":"case uvOffset","type":"case"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/uvscale","title":"case uvScale","type":"case"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/vflip","title":"case vflip","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/texture\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/texture\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/texture\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/texture\/codingkeys","title":"Texture.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/typeidentifier\/checkerboardxy","title":"case checkerboardXY","type":"case"},{"path":"\/documentation\/swifttracer\/texture\/typeidentifier\/constant","title":"case constant","type":"case"},{"path":"\/documentation\/swifttracer\/texture\/typeidentifier\/texture","title":"case texture","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/typeidentifier\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/typeidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/texture\/typeidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/typeidentifier\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/typeidentifier\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/texture\/typeidentifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/texture\/typeidentifier\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/texture\/typeidentifier","title":"Texture.TypeIdentifier","type":"enum"}],"path":"\/documentation\/swifttracer\/texture","title":"Using textures","type":"article"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/material\/evaluate(wo:wi:uv:p:)","title":"func evaluate(wo: Vec3, wi: Vec3, uv: Vec2, p: Point3) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/material\/hasdelta(uv:p:)","title":"func hasDelta(uv: Vec2, p: Point3) -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/material\/pdf(wo:wi:uv:p:)","title":"func pdf(wo: Vec3, wi: Vec3, uv: Vec2, p: Point3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/material\/sample(wo:uv:p:sample:)","title":"func sample(wo: Vec3, uv: Vec2, p: Point3, sample: Vec2) -> SampledDirection?","type":"method"}],"path":"\/documentation\/swifttracer\/material","title":"Material","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/diffuse\/init(texture:)","title":"init(texture: Texture)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/diffuse\/texture","title":"let texture: Texture","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/diffuse\/evaluate(wo:wi:uv:p:)","title":"func evaluate(wo: Vec3, wi: Vec3, uv: Vec2, p: Point3) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/diffuse\/hasdelta(uv:p:)","title":"func hasDelta(uv: Vec2, p: Point3) -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/diffuse\/pdf(wo:wi:uv:p:)","title":"func pdf(wo: Vec3, wi: Vec3, uv: Vec2, p: Point3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/diffuse\/sample(wo:uv:p:sample:)","title":"func sample(wo: Vec3, uv: Vec2, p: Point3, sample: Vec2) -> SampledDirection?","type":"method"}],"path":"\/documentation\/swifttracer\/diffuse","title":"Diffuse","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/metal\/init(texture:roughness:)","title":"init(texture: Texture, roughness: Texture)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/metal\/ks","title":"let ks: Texture","type":"property"},{"path":"\/documentation\/swifttracer\/metal\/roughness","title":"let roughness: Texture","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/metal\/evaluate(wo:wi:uv:p:)","title":"func evaluate(wo: Vec3, wi: Vec3, uv: Vec2, p: Point3) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/metal\/hasdelta(uv:p:)","title":"func hasDelta(uv: Vec2, p: Point3) -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/metal\/pdf(wo:wi:uv:p:)","title":"func pdf(wo: Vec3, wi: Vec3, uv: Vec2, p: Point3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/metal\/sample(wo:uv:p:sample:)","title":"func sample(wo: Vec3, uv: Vec2, p: Point3, sample: Vec2) -> SampledDirection?","type":"method"}],"path":"\/documentation\/swifttracer\/metal","title":"Metal","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/dielectric\/init(texture:etainterior:etaexterior:)","title":"init(texture: Texture, etaInterior: Float, etaExterior: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/dielectric\/etaexterior","title":"let etaExterior: Float","type":"property"},{"path":"\/documentation\/swifttracer\/dielectric\/etainterior","title":"let etaInterior: Float","type":"property"},{"path":"\/documentation\/swifttracer\/dielectric\/texture","title":"let texture: Texture","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/dielectric\/evaluate(wo:wi:uv:p:)","title":"func evaluate(wo: Vec3, wi: Vec3, uv: Vec2, p: Point3) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/dielectric\/hasdelta(uv:p:)","title":"func hasDelta(uv: Vec2, p: Point3) -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/dielectric\/pdf(wo:wi:uv:p:)","title":"func pdf(wo: Vec3, wi: Vec3, uv: Vec2, p: Point3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/dielectric\/sample(wo:uv:p:sample:)","title":"func sample(wo: Vec3, uv: Vec2, p: Point3, sample: Vec2) -> SampledDirection?","type":"method"}],"path":"\/documentation\/swifttracer\/dielectric","title":"Dielectric","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/blend\/init(m1:m2:alpha:)","title":"init(m1: Material, m2: Material, alpha: Texture)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/blend\/evaluate(wo:wi:uv:p:)","title":"func evaluate(wo: Vec3, wi: Vec3, uv: Vec2, p: Point3) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/blend\/hasdelta(uv:p:)","title":"func hasDelta(uv: Vec2, p: Point3) -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/blend\/pdf(wo:wi:uv:p:)","title":"func pdf(wo: Vec3, wi: Vec3, uv: Vec2, p: Point3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/blend\/sample(wo:uv:p:sample:)","title":"func sample(wo: Vec3, uv: Vec2, p: Point3, sample: Vec2) -> SampledDirection?","type":"method"}],"path":"\/documentation\/swifttracer\/blend","title":"Blend","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/normalmap\/init(material:normals:)","title":"init(material: Material, normals: Texture)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/normalmap\/material","title":"let material: Material","type":"property"},{"path":"\/documentation\/swifttracer\/normalmap\/normals","title":"let normals: Texture","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/normalmap\/evaluate(wo:wi:uv:p:)","title":"func evaluate(wo: Vec3, wi: Vec3, uv: Vec2, p: Point3) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/normalmap\/hasdelta(uv:p:)","title":"func hasDelta(uv: Vec2, p: Point3) -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/normalmap\/pdf(wo:wi:uv:p:)","title":"func pdf(wo: Vec3, wi: Vec3, uv: Vec2, p: Point3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/normalmap\/sample(wo:uv:p:sample:)","title":"func sample(wo: Vec3, uv: Vec2, p: Point3, sample: Vec2) -> SampledDirection?","type":"method"}],"path":"\/documentation\/swifttracer\/normalmap","title":"NormalMap","type":"class"},{"title":"Shapes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/shape\/area","title":"var area: Float","type":"property"},{"path":"\/documentation\/swifttracer\/shape\/light","title":"var light: Light!","type":"property"},{"path":"\/documentation\/swifttracer\/shape\/material","title":"var material: Material!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/shape\/aabb()","title":"func aabb() -> AABB","type":"method"},{"path":"\/documentation\/swifttracer\/shape\/pdfdirect(shape:p:y:n:)","title":"func pdfDirect(shape: Shape, p: Point3, y: Point3, n: Vec3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/shape\/sampledirect(p:sample:)","title":"func sampleDirect(p: Point3, sample: Vec2) -> EmitterSample","type":"method"}],"path":"\/documentation\/swifttracer\/shape","title":"Shape","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/sphere\/init(r:t:solidangle:)","title":"init(r: Float, t: Transform, solidAngle: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/sphere\/area","title":"var area: Float","type":"property"},{"path":"\/documentation\/swifttracer\/sphere\/light","title":"var light: Light!","type":"property"},{"path":"\/documentation\/swifttracer\/sphere\/material","title":"var material: Material!","type":"property"},{"path":"\/documentation\/swifttracer\/sphere\/radius","title":"let radius: Float","type":"property"},{"path":"\/documentation\/swifttracer\/sphere\/solidangle","title":"let solidAngle: Bool","type":"property"},{"path":"\/documentation\/swifttracer\/sphere\/transform","title":"let transform: Transform","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/sphere\/aabb()","title":"func aabb() -> AABB","type":"method"},{"path":"\/documentation\/swifttracer\/sphere\/hit(r:)","title":"func hit(r: Ray) -> Intersection?","type":"method"},{"path":"\/documentation\/swifttracer\/sphere\/pdfdirect(shape:p:y:n:)","title":"func pdfDirect(shape: Shape, p: Point3, y: Point3, n: Vec3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/sphere\/sampledirect(p:sample:)","title":"func sampleDirect(p: Point3, sample: Vec2) -> EmitterSample","type":"method"}],"path":"\/documentation\/swifttracer\/sphere","title":"Sphere","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/quad\/init(halfsize:transform:)","title":"init(halfSize: Vec2, transform: Transform)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/quad\/area","title":"var area: Float","type":"property"},{"path":"\/documentation\/swifttracer\/quad\/halfsize","title":"let halfSize: Vec2","type":"property"},{"path":"\/documentation\/swifttracer\/quad\/light","title":"var light: Light!","type":"property"},{"path":"\/documentation\/swifttracer\/quad\/material","title":"var material: Material!","type":"property"},{"path":"\/documentation\/swifttracer\/quad\/transform","title":"let transform: Transform","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/quad\/aabb()","title":"func aabb() -> AABB","type":"method"},{"path":"\/documentation\/swifttracer\/quad\/hit(r:)","title":"func hit(r: Ray) -> Intersection?","type":"method"},{"path":"\/documentation\/swifttracer\/quad\/pdfdirect(shape:p:y:n:)","title":"func pdfDirect(shape: Shape, p: Point3, y: Point3, n: Vec3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/quad\/sampledirect(p:sample:)","title":"func sampleDirect(p: Point3, sample: Vec2) -> EmitterSample","type":"method"}],"path":"\/documentation\/swifttracer\/quad","title":"Quad","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/triangle\/init(faceid:mesh:)","title":"init(faceId: Int, mesh: Mesh)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/triangle\/area","title":"var area: Float","type":"property"},{"path":"\/documentation\/swifttracer\/triangle\/faceid","title":"let faceId: Int","type":"property"},{"path":"\/documentation\/swifttracer\/triangle\/light","title":"var light: Light!","type":"property"},{"path":"\/documentation\/swifttracer\/triangle\/material","title":"var material: Material!","type":"property"},{"path":"\/documentation\/swifttracer\/triangle\/mesh","title":"let mesh: Mesh","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/triangle\/aabb()","title":"func aabb() -> AABB","type":"method"},{"path":"\/documentation\/swifttracer\/triangle\/hit(r:)","title":"func hit(r: Ray) -> Intersection?","type":"method"},{"path":"\/documentation\/swifttracer\/triangle\/pdfdirect(shape:p:y:n:)","title":"func pdfDirect(shape: Shape, p: Point3, y: Point3, n: Vec3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/triangle\/sampledirect(p:sample:)","title":"func sampleDirect(p: Point3, sample: Vec2) -> EmitterSample","type":"method"}],"path":"\/documentation\/swifttracer\/triangle","title":"Triangle","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/mesh\/init(filename:transform:)","title":"init(filename: URL, transform: Transform)","type":"init"},{"path":"\/documentation\/swifttracer\/mesh\/init(positions:normals:)","title":"init(positions: [Vec3], normals: [Vec3])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/mesh\/facenormalindexes","title":"var faceNormalIndexes: [Vec3]","type":"property"},{"path":"\/documentation\/swifttracer\/mesh\/facepositionindexes","title":"var facePositionIndexes: [Vec3]","type":"property"},{"path":"\/documentation\/swifttracer\/mesh\/facetangentindexes","title":"var faceTangentIndexes: [Vec3]","type":"property"},{"path":"\/documentation\/swifttracer\/mesh\/faceuvindexes","title":"var faceUvIndexes: [Vec3]","type":"property"},{"path":"\/documentation\/swifttracer\/mesh\/hasnormals","title":"var hasNormals: Bool","type":"property"},{"path":"\/documentation\/swifttracer\/mesh\/hastangents","title":"var hasTangents: Bool","type":"property"},{"path":"\/documentation\/swifttracer\/mesh\/hasuvs","title":"var hasUvs: Bool","type":"property"},{"path":"\/documentation\/swifttracer\/mesh\/light","title":"var light: Light!","type":"property"},{"path":"\/documentation\/swifttracer\/mesh\/material","title":"var material: Material!","type":"property"},{"path":"\/documentation\/swifttracer\/mesh\/normals","title":"var normals: [Vec3]","type":"property"},{"path":"\/documentation\/swifttracer\/mesh\/positions","title":"var positions: [Point3]","type":"property"},{"path":"\/documentation\/swifttracer\/mesh\/tangents","title":"var tangents: [Vec3]","type":"property"},{"path":"\/documentation\/swifttracer\/mesh\/uvs","title":"var uvs: [Vec2]","type":"property"}],"path":"\/documentation\/swifttracer\/mesh","title":"Mesh","type":"class"},{"title":"Lights","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/light\/category","title":"var category: LightCategory","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/swifttracer\/light\/l(p:n:uv:wo:)-5y23d","title":"func L(p: Point3, n: Vec3, uv: Vec2, wo: Vec3) -> Color","type":"method"}],"title":"Light Implementations","type":"groupMarker"}],"path":"\/documentation\/swifttracer\/light\/l(p:n:uv:wo:)-hcet","title":"func L(p: Point3, n: Vec3, uv: Vec2, wo: Vec3) -> Color","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swifttracer\/light\/le(ray:)-9y7nh","title":"func Le(ray: Ray) -> Color","type":"method"}],"title":"Light Implementations","type":"groupMarker"}],"path":"\/documentation\/swifttracer\/light\/le(ray:)-38h80","title":"func Le(ray: Ray) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/light\/pdfli(context:y:)","title":"func pdfLi(context: LightSample.Context, y: Point3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/light\/phi()","title":"func phi() -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/light\/preprocess()","title":"func preprocess()","type":"method"},{"path":"\/documentation\/swifttracer\/light\/sampleli(context:sample:)","title":"func sampleLi(context: LightSample.Context, sample: Vec2) -> LightSample?","type":"method"}],"path":"\/documentation\/swifttracer\/light","title":"Light","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/arealight\/init(texture:)","title":"init(texture: Texture)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/arealight\/category","title":"let category: LightCategory","type":"property"},{"path":"\/documentation\/swifttracer\/arealight\/shape","title":"var shape: Shape!","type":"property"},{"path":"\/documentation\/swifttracer\/arealight\/texture","title":"let texture: Texture","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/arealight\/l(p:n:uv:wo:)","title":"func L(p: Point3, n: Vec3, uv: Vec2, wo: Vec3) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/arealight\/pdfli(context:y:)","title":"func pdfLi(context: LightSample.Context, y: Point3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/arealight\/phi()","title":"func phi() -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/arealight\/preprocess()","title":"func preprocess()","type":"method"},{"path":"\/documentation\/swifttracer\/arealight\/sampleli(context:sample:)","title":"func sampleLi(context: LightSample.Context, sample: Vec2) -> LightSample?","type":"method"}],"path":"\/documentation\/swifttracer\/arealight","title":"AreaLight","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pointlight\/init(transform:intensity:)","title":"init(transform: Transform, intensity: Color)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pointlight\/i","title":"let I: Color","type":"property"},{"path":"\/documentation\/swifttracer\/pointlight\/category","title":"let category: LightCategory","type":"property"},{"path":"\/documentation\/swifttracer\/pointlight\/transform","title":"let transform: Transform","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pointlight\/pdfli(context:y:)","title":"func pdfLi(context: LightSample.Context, y: Point3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/pointlight\/phi()","title":"func phi() -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/pointlight\/preprocess()","title":"func preprocess()","type":"method"},{"path":"\/documentation\/swifttracer\/pointlight\/sampleli(context:sample:)","title":"func sampleLi(context: LightSample.Context, sample: Vec2) -> LightSample?","type":"method"}],"path":"\/documentation\/swifttracer\/pointlight","title":"PointLight","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/spotlight\/init(transform:intensity:start:end:)","title":"init(transform: Transform, intensity: Color, start: Float, end: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/spotlight\/category","title":"let category: LightCategory","type":"property"},{"path":"\/documentation\/swifttracer\/spotlight\/cosfalloffend","title":"let cosFalloffEnd: Float","type":"property"},{"path":"\/documentation\/swifttracer\/spotlight\/cosfalloffstart","title":"let cosFalloffStart: Float","type":"property"},{"path":"\/documentation\/swifttracer\/spotlight\/intensity","title":"let intensity: Color","type":"property"},{"path":"\/documentation\/swifttracer\/spotlight\/transform","title":"let transform: Transform","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/spotlight\/pdfli(context:y:)","title":"func pdfLi(context: LightSample.Context, y: Point3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/spotlight\/phi()","title":"func phi() -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/spotlight\/preprocess()","title":"func preprocess()","type":"method"},{"path":"\/documentation\/swifttracer\/spotlight\/sampleli(context:sample:)","title":"func sampleLi(context: LightSample.Context, sample: Vec2) -> LightSample?","type":"method"}],"path":"\/documentation\/swifttracer\/spotlight","title":"SpotLight","type":"class"},{"title":"Integrators","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/integrator\/render(scene:sampler:)","title":"func render(scene: Scene, sampler: Sampler) -> Array2d<Color>","type":"method"}],"path":"\/documentation\/swifttracer\/integrator","title":"Integrator","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/init(strategy:)","title":"init(strategy: Strategy)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/strategy-swift.property","title":"let strategy: Strategy","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/render(scene:sampler:)","title":"func render(scene: Scene, sampler: Sampler) -> Array2d<Color>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/codingkeys\/strategy","title":"case strategy","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/directintegrator\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/directintegrator\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/directintegrator\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/directintegrator\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/directintegrator\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/directintegrator\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/directintegrator\/codingkeys","title":"DirectIntegrator.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/strategy-swift.enum\/bsdf","title":"case bsdf","type":"case"},{"path":"\/documentation\/swifttracer\/directintegrator\/strategy-swift.enum\/emitter","title":"case emitter","type":"case"},{"path":"\/documentation\/swifttracer\/directintegrator\/strategy-swift.enum\/eval","title":"case eval","type":"case"},{"path":"\/documentation\/swifttracer\/directintegrator\/strategy-swift.enum\/mis","title":"case mis","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/strategy-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/strategy-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/directintegrator\/strategy-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/strategy-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/strategy-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/strategy-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/directintegrator\/strategy-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/directintegrator\/strategy-swift.enum","title":"DirectIntegrator.Strategy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/directintegrator\/li(ray:scene:sampler:)","title":"func li(ray: Ray, scene: Scene, sampler: Sampler) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/directintegrator\/preprocess(scene:sampler:)","title":"func preprocess(scene: Scene, sampler: Sampler)","type":"method"}],"path":"\/documentation\/swifttracer\/directintegrator\/samplerintegrator-implementations","title":"SamplerIntegrator Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/directintegrator","title":"DirectIntegrator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/normalintegrator\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/normalintegrator\/render(scene:sampler:)","title":"func render(scene: Scene, sampler: Sampler) -> Array2d<Color>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/normalintegrator\/li(ray:scene:sampler:)","title":"func li(ray: Ray, scene: Scene, sampler: Sampler) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/normalintegrator\/preprocess(scene:sampler:)","title":"func preprocess(scene: Scene, sampler: Sampler)","type":"method"}],"path":"\/documentation\/swifttracer\/normalintegrator\/samplerintegrator-implementations","title":"SamplerIntegrator Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/normalintegrator","title":"NormalIntegrator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pathintegrator\/init(maxdepth:mis:)","title":"init(maxDepth: Int, mis: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pathintegrator\/maxdepth","title":"let maxDepth: Int","type":"property"},{"path":"\/documentation\/swifttracer\/pathintegrator\/mis","title":"let mis: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pathintegrator\/render(scene:sampler:)","title":"func render(scene: Scene, sampler: Sampler) -> Array2d<Color>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys\/depth","title":"case depth","type":"case"},{"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys\/mis","title":"case mis","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/pathintegrator\/codingkeys","title":"PathIntegrator.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pathintegrator\/li(ray:scene:sampler:)","title":"func li(ray: Ray, scene: Scene, sampler: Sampler) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/pathintegrator\/preprocess(scene:sampler:)","title":"func preprocess(scene: Scene, sampler: Sampler)","type":"method"}],"path":"\/documentation\/swifttracer\/pathintegrator\/samplerintegrator-implementations","title":"SamplerIntegrator Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/pathintegrator","title":"PathIntegrator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/uvintegrator\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/uvintegrator\/render(scene:sampler:)","title":"func render(scene: Scene, sampler: Sampler) -> Array2d<Color>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/uvintegrator\/li(ray:scene:sampler:)","title":"func li(ray: Ray, scene: Scene, sampler: Sampler) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/uvintegrator\/preprocess(scene:sampler:)","title":"func preprocess(scene: Scene, sampler: Sampler)","type":"method"}],"path":"\/documentation\/swifttracer\/uvintegrator\/samplerintegrator-implementations","title":"SamplerIntegrator Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/uvintegrator","title":"UvIntegrator","type":"class"},{"title":"Maths","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/maths","title":"Math extensions","type":"article"},{"path":"\/documentation\/swifttracer\/vec2","title":"Vec2","type":"typealias"},{"path":"\/documentation\/swifttracer\/vec3","title":"Vec3","type":"typealias"},{"path":"\/documentation\/swifttracer\/color","title":"Color","type":"typealias"},{"path":"\/documentation\/swifttracer\/point3","title":"Point3","type":"typealias"},{"path":"\/documentation\/swifttracer\/vec4","title":"Vec4","type":"typealias"},{"path":"\/documentation\/swifttracer\/mat3","title":"Mat3","type":"typealias"},{"path":"\/documentation\/swifttracer\/mat4","title":"Mat4","type":"typealias"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/array2d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swifttracer\/array2d\/init(contentsof:)","title":"init?(contentsOf: String)","type":"init"},{"path":"\/documentation\/swifttracer\/array2d\/init(copy:)","title":"init(copy: Array2d<T>)","type":"init"},{"path":"\/documentation\/swifttracer\/array2d\/init(x:y:value:)","title":"init(x: Int, y: Int, value: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/array2d\/size","title":"var size: Int","type":"property"},{"path":"\/documentation\/swifttracer\/array2d\/xsize","title":"var xSize: Int","type":"property"},{"path":"\/documentation\/swifttracer\/array2d\/ysize","title":"var ySize: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/array2d\/flipvertically()","title":"func flipVertically()","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/get(_:_:)","title":"func get(Int, Int) -> T","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/set(value:_:_:)","title":"func set(value: T, Int, Int)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/array2d\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/swifttracer\/array2d\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/swifttracer\/array2d\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/array2d\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/fill(using:)-2wdgr","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/fill(using:)-48k2q","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/fill(using:)-5ye3j","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/flatmap(_:)-71yzl","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/flatmap(_:)-m3l0","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/joined(separator:)-35hy4","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/joined(separator:)-3e0cf","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/makeiterator()","title":"func makeIterator() -> TwoDimensionalIterator<T>","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/sorted(using:)-3mhr6","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/sorted(using:)-7ahon","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swifttracer\/array2d\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/swifttracer\/array2d\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/array2d","title":"Array2d","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/init(buildertype:nodesize:)","title":"init(builderType: BuilderType, nodeSize: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/light","title":"var light: Light!","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/axisselection\/longest","title":"case longest","type":"case"},{"path":"\/documentation\/swifttracer\/bvh\/axisselection\/roundrobin","title":"case roundRobin","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/axisselection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/bvh\/axisselection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/bvh\/axisselection","title":"BVH.AxisSelection","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/buildertype\/median","title":"case median","type":"case"},{"path":"\/documentation\/swifttracer\/bvh\/buildertype\/sah","title":"case sah","type":"case"},{"path":"\/documentation\/swifttracer\/bvh\/buildertype\/spatial","title":"case spatial","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/buildertype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/buildertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/bvh\/buildertype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/buildertype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/buildertype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/buildertype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/bvh\/buildertype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/bvh\/buildertype","title":"BVH.BuilderType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/codingkeys\/builder","title":"case builder","type":"case"},{"path":"\/documentation\/swifttracer\/bvh\/codingkeys\/nodesize","title":"case nodeSize","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/bvh\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/bvh\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/bvh\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/bvh\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/bvh\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/bvh\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/bvh\/codingkeys","title":"BVH.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/swifttracer\/bvh\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/hit(r:)","title":"func hit(r: Ray) -> Intersection?","type":"method"}],"path":"\/documentation\/swifttracer\/bvh\/intersecting-implementations","title":"Intersecting Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/bvh\/add(shape:)","title":"func add(shape: Shape)","type":"method"},{"path":"\/documentation\/swifttracer\/bvh\/build()","title":"func build()","type":"method"}],"path":"\/documentation\/swifttracer\/bvh\/shapeaggregate-implementations","title":"ShapeAggregate Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/bvh","title":"BVH","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/camera\/init(t:firstpixel:du:dv:resolution:focaldistance:origin:)","title":"init(t: Transform, firstPixel: Point3, du: Vec3, dv: Vec3, resolution: Vec2, focalDistance: Float, origin: Point3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/camera\/focaldistance","title":"let focalDistance: Float","type":"property"},{"path":"\/documentation\/swifttracer\/camera\/resolution","title":"let resolution: Vec2","type":"property"},{"path":"\/documentation\/swifttracer\/camera\/transform","title":"let transform: Transform","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/camera\/createray(from:)","title":"func createRay(from: Vec2) -> Ray","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/camera\/codingkeys\/aperture","title":"case aperture","type":"case"},{"path":"\/documentation\/swifttracer\/camera\/codingkeys\/fdist","title":"case fdist","type":"case"},{"path":"\/documentation\/swifttracer\/camera\/codingkeys\/fov","title":"case fov","type":"case"},{"path":"\/documentation\/swifttracer\/camera\/codingkeys\/resolution","title":"case resolution","type":"case"},{"path":"\/documentation\/swifttracer\/camera\/codingkeys\/transform","title":"case transform","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/camera\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/camera\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/camera\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/camera\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/camera\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/camera\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/camera\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/camera\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/camera\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/camera\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/camera\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/camera\/codingkeys","title":"Camera.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/camera\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/swifttracer\/camera\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/camera","title":"Camera","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/image\/init(array:)","title":"init(array: Array2d<Color>)","type":"init"},{"path":"\/documentation\/swifttracer\/image\/init(filename:bundle:subdir:)","title":"init?(filename: String, bundle: Bundle, subdir: String?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/image\/read()","title":"func read() -> Array2d<Color>","type":"method"},{"path":"\/documentation\/swifttracer\/image\/write(to:)","title":"func write(to: String) -> Bool","type":"method"}],"path":"\/documentation\/swifttracer\/image","title":"Image","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/independentsampler\/init(nspp:)","title":"init(nspp: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/independentsampler\/nbsamples","title":"let nbSamples: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/independentsampler\/next()","title":"func next() -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/independentsampler\/next2()","title":"func next2() -> Vec2","type":"method"}],"path":"\/documentation\/swifttracer\/independentsampler","title":"IndependentSampler","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/ray\/distance\/init(min:max:)","title":"init(min: Float, max: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/ray\/distance\/max","title":"let max: Float","type":"property"},{"path":"\/documentation\/swifttracer\/ray\/distance\/min","title":"let min: Float","type":"property"},{"path":"\/documentation\/swifttracer\/ray\/distance\/range","title":"var range: ClosedRange<Float>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/ray\/distance\/with(max:)","title":"func with(max: Float) -> Distance","type":"method"},{"path":"\/documentation\/swifttracer\/ray\/distance\/with(min:)","title":"func with(min: Float) -> Distance","type":"method"}],"path":"\/documentation\/swifttracer\/ray\/distance","title":"Ray.Distance","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/ray\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swifttracer\/ray\/init(origin:direction:)","title":"init(origin: Point3, direction: Vec3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/ray\/d","title":"let d: Vec3","type":"property"},{"path":"\/documentation\/swifttracer\/ray\/o","title":"let o: Point3","type":"property"},{"path":"\/documentation\/swifttracer\/ray\/t","title":"var t: Distance","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/ray\/pointat(t:)","title":"func pointAt(t: Float) -> Point3","type":"method"},{"path":"\/documentation\/swifttracer\/ray\/with(max:)","title":"func with(max: Float) -> Self","type":"method"},{"path":"\/documentation\/swifttracer\/ray\/with(min:)","title":"func with(min: Float) -> Self","type":"method"},{"path":"\/documentation\/swifttracer\/ray\/withinrange(min:max:)","title":"func withinRange(min: Float, max: Float) -> Self","type":"method"}],"path":"\/documentation\/swifttracer\/ray","title":"Ray","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/init(root:lightsampler:materials:camera:background:sampler:integrator:)","title":"init(root: ShapeAggregate, lightSampler: LightSampler, materials: [String : Material], camera: Camera, background: Color, sampler: Sampler, integrator: Integrator)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/background","title":"let background: Color","type":"property"},{"path":"\/documentation\/swifttracer\/scene\/camera","title":"let camera: Camera","type":"property"},{"path":"\/documentation\/swifttracer\/scene\/integrator","title":"let integrator: Integrator","type":"property"},{"path":"\/documentation\/swifttracer\/scene\/lightsampler","title":"let lightSampler: LightSampler","type":"property"},{"path":"\/documentation\/swifttracer\/scene\/materials","title":"let materials: [String : Material]","type":"property"},{"path":"\/documentation\/swifttracer\/scene\/root","title":"let root: ShapeAggregate","type":"property"},{"path":"\/documentation\/swifttracer\/scene\/sampler","title":"let sampler: Sampler","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/hit(r:)","title":"func hit(r: Ray) -> Intersection?","type":"method"},{"path":"\/documentation\/swifttracer\/scene\/render()","title":"func render() -> Array2d<Color>","type":"method"},{"path":"\/documentation\/swifttracer\/scene\/sample(context:s:)","title":"func sample(context: LightSample.Context, s: Vec2) -> LightSample?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/nb_intersection","title":"static var NB_INTERSECTION: Int","type":"property"},{"path":"\/documentation\/swifttracer\/scene\/nb_traced_rays","title":"static var NB_TRACED_RAYS: Int","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/accelerator","title":"case accelerator","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/background","title":"case background","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/camera","title":"case camera","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/integrator","title":"case integrator","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/lights","title":"case lights","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/materials","title":"case materials","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/maxdepth","title":"case maxDepth","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/sampler","title":"case sampler","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/shapes","title":"case shapes","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/scene\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/scene\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/scene\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/scene\/codingkeys","title":"Scene.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/example\/blend","title":"case blend","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/checkerboard","title":"case checkerboard","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/cornelbox","title":"case cornelBox","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/direct","title":"case direct","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/odyssey","title":"case odyssey","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/odysseytriangle","title":"case odysseyTriangle","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/reflect","title":"case reflect","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/refract","title":"case refract","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/roughness","title":"case roughness","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/simple","title":"case simple","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/teapot","title":"case teapot","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/test","title":"case test","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/textures","title":"case textures","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/threespheres","title":"case threeSpheres","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/triangle","title":"case triangle","type":"case"},{"path":"\/documentation\/swifttracer\/scene\/example\/veach","title":"case veach","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/example\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/example\/create()","title":"func create() throws -> Data","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/example\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/scene\/example\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/example\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/example\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/scene\/example\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/scene\/example","title":"Scene.Example","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/scene\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/swifttracer\/scene\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/scene","title":"Scene","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/shapegroup\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/shapegroup\/aabbs","title":"var aabbs: [AABB]","type":"property"},{"path":"\/documentation\/swifttracer\/shapegroup\/light","title":"var light: Light!","type":"property"},{"path":"\/documentation\/swifttracer\/shapegroup\/lightindexes","title":"var lightIndexes: [Int]","type":"property"},{"path":"\/documentation\/swifttracer\/shapegroup\/material","title":"var material: Material!","type":"property"},{"path":"\/documentation\/swifttracer\/shapegroup\/shapes","title":"var shapes: [Shape]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/shapegroup\/add(shape:)","title":"func add(shape: Shape)","type":"method"},{"path":"\/documentation\/swifttracer\/shapegroup\/build()","title":"func build()","type":"method"},{"path":"\/documentation\/swifttracer\/shapegroup\/hit(r:)","title":"func hit(r: Ray) -> Intersection?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/shapegroup\/area","title":"var area: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/shapegroup\/aabb()","title":"func aabb() -> AABB","type":"method"},{"path":"\/documentation\/swifttracer\/shapegroup\/pdfdirect(shape:p:y:n:)","title":"func pdfDirect(shape: any Shape, p: Point3, y: Point3, n: Vec3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/shapegroup\/sampledirect(p:sample:)","title":"func sampleDirect(p: Point3, sample: Vec2) -> EmitterSample","type":"method"}],"path":"\/documentation\/swifttracer\/shapegroup\/shape-implementations","title":"Shape Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/shapegroup","title":"ShapeGroup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/uniformlightsampler\/init(lights:)","title":"init(lights: [Light])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/uniformlightsampler\/pmf(context:light:)","title":"func pmf(context: LightSample.Context, light: any Light) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/uniformlightsampler\/pmf(light:)","title":"func pmf(light: any Light) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/uniformlightsampler\/sample(context:sample:)","title":"func sample(context: LightSample.Context, sample: Float) -> SampledLight?","type":"method"},{"path":"\/documentation\/swifttracer\/uniformlightsampler\/sample(sample:)","title":"func sample(sample: Float) -> SampledLight?","type":"method"}],"path":"\/documentation\/swifttracer\/uniformlightsampler","title":"UniformLightSampler","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/intersecting\/hit(r:)","title":"func hit(r: Ray) -> Intersection?","type":"method"}],"path":"\/documentation\/swifttracer\/intersecting","title":"Intersecting","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightsampler\/pmf(context:light:)","title":"func pmf(context: LightSample.Context, light: Light) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/lightsampler\/pmf(light:)","title":"func pmf(light: Light) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/lightsampler\/sample(context:sample:)","title":"func sample(context: LightSample.Context, sample: Float) -> SampledLight?","type":"method"},{"path":"\/documentation\/swifttracer\/lightsampler\/sample(sample:)","title":"func sample(sample: Float) -> SampledLight?","type":"method"}],"path":"\/documentation\/swifttracer\/lightsampler","title":"LightSampler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/sampler\/nbsamples","title":"var nbSamples: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/sampler\/next()","title":"func next() -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/sampler\/next2()","title":"func next2() -> Vec2","type":"method"}],"path":"\/documentation\/swifttracer\/sampler","title":"Sampler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/samplerintegrator\/li(ray:scene:sampler:)","title":"func li(ray: Ray, scene: Scene, sampler: Sampler) -> Color","type":"method"},{"path":"\/documentation\/swifttracer\/samplerintegrator\/preprocess(scene:sampler:)","title":"func preprocess(scene: Scene, sampler: Sampler)","type":"method"}],"path":"\/documentation\/swifttracer\/samplerintegrator","title":"SamplerIntegrator","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/shapeaggregate\/add(shape:)","title":"func add(shape: Shape)","type":"method"},{"path":"\/documentation\/swifttracer\/shapeaggregate\/build()","title":"func build()","type":"method"}],"path":"\/documentation\/swifttracer\/shapeaggregate","title":"ShapeAggregate","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/aabb\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swifttracer\/aabb\/init(min:max:)","title":"init(min: Point3, max: Point3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/aabb\/max","title":"var max: Point3","type":"property"},{"path":"\/documentation\/swifttracer\/aabb\/min","title":"var min: Point3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/aabb\/area()","title":"func area() -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/aabb\/center()","title":"func center() -> Point3","type":"method"},{"path":"\/documentation\/swifttracer\/aabb\/diagonal()","title":"func diagonal() -> Vec3","type":"method"},{"path":"\/documentation\/swifttracer\/aabb\/extend(with:)","title":"func extend(with: Point3)","type":"method"},{"path":"\/documentation\/swifttracer\/aabb\/hit(r:)","title":"func hit(r: Ray) -> Float?","type":"method"},{"path":"\/documentation\/swifttracer\/aabb\/merge(with:)","title":"func merge(with: AABB) -> AABB","type":"method"},{"path":"\/documentation\/swifttracer\/aabb\/sanitized()","title":"func sanitized() -> AABB","type":"method"}],"path":"\/documentation\/swifttracer\/aabb","title":"AABB","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyintegrator\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyintegrator\/wrapped","title":"let wrapped: Integrator","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/params","title":"case params","type":"case"},{"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/anyintegrator\/codingkeys","title":"AnyIntegrator.CodingKeys","type":"enum"}],"path":"\/documentation\/swifttracer\/anyintegrator","title":"AnyIntegrator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anylight\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anylight\/category","title":"let category: LightCategory","type":"property"},{"path":"\/documentation\/swifttracer\/anylight\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swifttracer\/anylight\/wrapped","title":"var wrapped: Light","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/falloff","title":"case falloff","type":"case"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/intensity","title":"case intensity","type":"case"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/radiance","title":"case radiance","type":"case"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/transform","title":"case transform","type":"case"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/anylight\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/anylight\/codingkeys","title":"AnyLight.CodingKeys","type":"enum"}],"path":"\/documentation\/swifttracer\/anylight","title":"AnyLight","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swifttracer\/anymaterial\/type","title":"let type: TypeIdentifier","type":"property"},{"path":"\/documentation\/swifttracer\/anymaterial\/wrapped","title":"var wrapped: Material","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/albedo","title":"case albedo","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/alpha","title":"case alpha","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/bump","title":"case bump","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/etaext","title":"case etaExt","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/etaint","title":"case etaInt","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/ks","title":"case ks","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/m1","title":"case m1","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/m2","title":"case m2","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/material","title":"case material","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/normals","title":"case normals","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/radiance","title":"case radiance","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/roughness","title":"case roughness","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/anymaterial\/codingkeys","title":"AnyMaterial.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/typeidentifier\/blend","title":"case blend","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/typeidentifier\/dielectric","title":"case dielectric","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/typeidentifier\/diffuse","title":"case diffuse","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/typeidentifier\/metal","title":"case metal","type":"case"},{"path":"\/documentation\/swifttracer\/anymaterial\/typeidentifier\/normalmap","title":"case normalMap","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/typeidentifier\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/typeidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/anymaterial\/typeidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/typeidentifier\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/typeidentifier\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anymaterial\/typeidentifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/anymaterial\/typeidentifier\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/anymaterial\/typeidentifier","title":"AnyMaterial.TypeIdentifier","type":"enum"}],"path":"\/documentation\/swifttracer\/anymaterial","title":"AnyMaterial","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/wrapped","title":"let wrapped: Sampler","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/codingkeys\/nspp","title":"case nspp","type":"case"},{"path":"\/documentation\/swifttracer\/anysampler\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/anysampler\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/anysampler\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/anysampler\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/anysampler\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/anysampler\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/anysampler\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/anysampler\/codingkeys","title":"AnySampler.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/typeidentifier\/independent","title":"case independent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/typeidentifier\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/typeidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/anysampler\/typeidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/typeidentifier\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/typeidentifier\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anysampler\/typeidentifier\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/swifttracer\/anysampler\/typeidentifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/anysampler\/typeidentifier\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/anysampler\/typeidentifier","title":"AnySampler.TypeIdentifier","type":"enum"}],"path":"\/documentation\/swifttracer\/anysampler","title":"AnySampler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/light","title":"let light: String","type":"property"},{"path":"\/documentation\/swifttracer\/anyshape\/material","title":"let material: String","type":"property"},{"path":"\/documentation\/swifttracer\/anyshape\/type","title":"let type: TypeIdentifier","type":"property"},{"path":"\/documentation\/swifttracer\/anyshape\/wrapped","title":"var wrapped: Shape","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/unwrapped(materials:lights:)","title":"func unwrapped(materials: [String : Material], lights: [String : Light]) -> Shape","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/filename","title":"case filename","type":"case"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/light","title":"case light","type":"case"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/material","title":"case material","type":"case"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/normals","title":"case normals","type":"case"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/positions","title":"case positions","type":"case"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/size","title":"case size","type":"case"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/solidangle","title":"case solidAngle","type":"case"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/transform","title":"case transform","type":"case"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/anyshape\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/anyshape\/codingkeys","title":"AnyShape.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/typeidentifier\/mesh","title":"case mesh","type":"case"},{"path":"\/documentation\/swifttracer\/anyshape\/typeidentifier\/quad","title":"case quad","type":"case"},{"path":"\/documentation\/swifttracer\/anyshape\/typeidentifier\/sphere","title":"case sphere","type":"case"},{"path":"\/documentation\/swifttracer\/anyshape\/typeidentifier\/triangle","title":"case triangle","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/typeidentifier\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/typeidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/anyshape\/typeidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/typeidentifier\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/typeidentifier\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/anyshape\/typeidentifier\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/swifttracer\/anyshape\/typeidentifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/anyshape\/typeidentifier\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/anyshape\/typeidentifier","title":"AnyShape.TypeIdentifier","type":"enum"}],"path":"\/documentation\/swifttracer\/anyshape","title":"AnyShape","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/emittersample\/init(y:n:uv:pdf:shape:)","title":"init(y: Point3, n: Vec3, uv: Vec2, pdf: Float, shape: any Shape)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/emittersample\/n","title":"let n: Vec3","type":"property"},{"path":"\/documentation\/swifttracer\/emittersample\/pdf","title":"let pdf: Float","type":"property"},{"path":"\/documentation\/swifttracer\/emittersample\/shape","title":"let shape: Shape","type":"property"},{"path":"\/documentation\/swifttracer\/emittersample\/uv","title":"let uv: Vec2","type":"property"},{"path":"\/documentation\/swifttracer\/emittersample\/y","title":"let y: Point3","type":"property"}],"path":"\/documentation\/swifttracer\/emittersample","title":"EmitterSample","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/frame\/init(its:)","title":"init(its: Intersection)","type":"init"},{"path":"\/documentation\/swifttracer\/frame\/init(n:)","title":"init(n: Vec3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/frame\/x","title":"let x: Vec3","type":"property"},{"path":"\/documentation\/swifttracer\/frame\/y","title":"let y: Vec3","type":"property"},{"path":"\/documentation\/swifttracer\/frame\/z","title":"let z: Vec3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/frame\/tolocal(v:)","title":"func toLocal(v: Vec3) -> Vec3","type":"method"},{"path":"\/documentation\/swifttracer\/frame\/toworld(v:)","title":"func toWorld(v: Vec3) -> Vec3","type":"method"}],"path":"\/documentation\/swifttracer\/frame","title":"Frame","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/intersection\/init(t:p:n:tan:bitan:uv:shape:)","title":"init(t: Float, p: Point3, n: Vec3, tan: Vec3, bitan: Vec3, uv: Vec2, shape: any Shape)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/intersection\/bitan","title":"let bitan: Vec3","type":"property"},{"path":"\/documentation\/swifttracer\/intersection\/hasemission","title":"var hasEmission: Bool","type":"property"},{"path":"\/documentation\/swifttracer\/intersection\/n","title":"let n: Vec3","type":"property"},{"path":"\/documentation\/swifttracer\/intersection\/p","title":"let p: Point3","type":"property"},{"path":"\/documentation\/swifttracer\/intersection\/shape","title":"let shape: Shape","type":"property"},{"path":"\/documentation\/swifttracer\/intersection\/t","title":"let t: Float","type":"property"},{"path":"\/documentation\/swifttracer\/intersection\/tan","title":"let tan: Vec3","type":"property"},{"path":"\/documentation\/swifttracer\/intersection\/uv","title":"let uv: Vec2","type":"property"}],"path":"\/documentation\/swifttracer\/intersection","title":"Intersection","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightsample\/context\/init(p:n:ns:)","title":"init(p: Point3, n: Vec3, ns: Vec3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightsample\/context\/n","title":"let n: Vec3","type":"property"},{"path":"\/documentation\/swifttracer\/lightsample\/context\/ns","title":"let ns: Vec3","type":"property"},{"path":"\/documentation\/swifttracer\/lightsample\/context\/p","title":"let p: Point3","type":"property"}],"path":"\/documentation\/swifttracer\/lightsample\/context","title":"LightSample.Context","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightsample\/init(l:wi:p:pdf:)","title":"init(L: Color, wi: Vec3, p: Point3, pdf: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightsample\/l","title":"let L: Color","type":"property"},{"path":"\/documentation\/swifttracer\/lightsample\/p","title":"let p: Point3","type":"property"},{"path":"\/documentation\/swifttracer\/lightsample\/pdf","title":"let pdf: Float","type":"property"},{"path":"\/documentation\/swifttracer\/lightsample\/wi","title":"let wi: Vec3","type":"property"}],"path":"\/documentation\/swifttracer\/lightsample","title":"LightSample","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/sampleddirection\/init(weight:wi:)","title":"init(weight: Color, wi: Vec3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/sampleddirection\/weight","title":"let weight: Color","type":"property"},{"path":"\/documentation\/swifttracer\/sampleddirection\/wi","title":"let wi: Vec3","type":"property"}],"path":"\/documentation\/swifttracer\/sampleddirection","title":"SampledDirection","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/sampledlight\/init(light:prob:s:)","title":"init(light: any Light, prob: Float, s: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/sampledlight\/light","title":"let light: Light","type":"property"},{"path":"\/documentation\/swifttracer\/sampledlight\/prob","title":"let prob: Float","type":"property"},{"path":"\/documentation\/swifttracer\/sampledlight\/s","title":"let s: Float","type":"property"}],"path":"\/documentation\/swifttracer\/sampledlight","title":"SampledLight","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/tracer\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swifttracer\/tracer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swifttracer\/tracer\/init(input:output:)","title":"init(input: Argument<String>, output: Option<String?>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/tracer\/input","title":"var input: String","type":"property"},{"path":"\/documentation\/swifttracer\/tracer\/output","title":"var output: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/tracer\/run()-1xzq3","title":"func run() throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/tracer\/validate()","title":"func validate() throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/tracer\/_errorlabel","title":"static var _errorLabel: String","type":"property"},{"path":"\/documentation\/swifttracer\/tracer\/ascommand","title":"static var asCommand: any ParsableCommand.Type","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/tracer\/_dumphelp()","title":"static func _dumpHelp() -> String","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/completionscript(for:)","title":"static func completionScript(for: CompletionShell) -> String","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/exit(witherror:)","title":"static func exit(withError: (any Error)?) -> Never","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/exitcode(for:)","title":"static func exitCode(for: any Error) -> ExitCode","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/fullmessage(for:)","title":"static func fullMessage(for: any Error) -> String","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/fullmessage(for:columns:)","title":"static func fullMessage(for: any Error, columns: Int?) -> String","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/helpmessage(columns:)","title":"static func helpMessage(columns: Int?) -> String","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/helpmessage(includehidden:columns:)","title":"static func helpMessage(includeHidden: Bool, columns: Int?) -> String","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/message(for:)","title":"static func message(for: any Error) -> String","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/parse(_:)","title":"static func parse([String]?) throws -> Self","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/parseorexit(_:)","title":"static func parseOrExit([String]?) -> Self","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/usagestring(includehidden:)","title":"static func usageString(includeHidden: Bool) -> String","type":"method"}],"path":"\/documentation\/swifttracer\/tracer\/parsablearguments-implementations","title":"ParsableArguments Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/tracer\/run()-1fkn0","title":"func run() throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/tracer\/_commandname","title":"static var _commandName: String","type":"property"},{"path":"\/documentation\/swifttracer\/tracer\/configuration","title":"static var configuration: CommandConfiguration","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/tracer\/helpmessage(for:columns:)","title":"static func helpMessage(for: any ParsableCommand.Type, columns: Int?) -> String","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/helpmessage(for:includehidden:columns:)","title":"static func helpMessage(for: any ParsableCommand.Type, includeHidden: Bool, columns: Int?) -> String","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/main()","title":"static func main()","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/main(_:)","title":"static func main([String]?)","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/parseasroot(_:)","title":"static func parseAsRoot([String]?) throws -> any ParsableCommand","type":"method"},{"path":"\/documentation\/swifttracer\/tracer\/usagestring(for:includehidden:)","title":"static func usageString(for: any ParsableCommand.Type, includeHidden: Bool) -> String","type":"method"}],"path":"\/documentation\/swifttracer\/tracer\/parsablecommand-implementations","title":"ParsableCommand Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/tracer","title":"Tracer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/transform\/init(m:)","title":"init(m: Mat4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/transform\/m","title":"let m: Mat4","type":"property"},{"path":"\/documentation\/swifttracer\/transform\/minv","title":"let mInv: Mat4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/transform\/inverse()","title":"func inverse() -> Transform","type":"method"},{"path":"\/documentation\/swifttracer\/transform\/normal(_:)","title":"func normal(Vec3) -> Vec3","type":"method"},{"path":"\/documentation\/swifttracer\/transform\/point(_:)","title":"func point(Point3) -> Point3","type":"method"},{"path":"\/documentation\/swifttracer\/transform\/ray(_:)","title":"func ray(Ray) -> Ray","type":"method"},{"path":"\/documentation\/swifttracer\/transform\/vector(_:)","title":"func vector(Vec3) -> Vec3","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/transform\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/swifttracer\/transform\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/transform","title":"Transform","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/twodimensionaliterator\/init(_:)","title":"init(Array2d<T>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/twodimensionaliterator\/x","title":"var x: Int","type":"property"},{"path":"\/documentation\/swifttracer\/twodimensionaliterator\/y","title":"var y: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/twodimensionaliterator\/next()","title":"func next() -> T?","type":"method"}],"path":"\/documentation\/swifttracer\/twodimensionaliterator","title":"TwoDimensionalIterator","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/render(integrator:scene:sampler:)","title":"func render<T>(integrator: T, scene: Scene, sampler: Sampler) -> Array2d<Color>","type":"func"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/integratortype\/direct","title":"case direct","type":"case"},{"path":"\/documentation\/swifttracer\/integratortype\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/swifttracer\/integratortype\/path","title":"case path","type":"case"},{"path":"\/documentation\/swifttracer\/integratortype\/uv","title":"case uv","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/integratortype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/integratortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/integratortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/integratortype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/integratortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/integratortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/integratortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/integratortype","title":"IntegratorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/area","title":"case area","type":"case"},{"path":"\/documentation\/swifttracer\/lightcategory\/delta(type:)","title":"case delta(type: DeltaType)","type":"case"},{"path":"\/documentation\/swifttracer\/lightcategory\/infinite","title":"case infinite","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/isdelta","title":"var isDelta: Bool","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys\/category","title":"case category","type":"case"},{"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys\/delta","title":"case delta","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/lightcategory\/codingkeys","title":"LightCategory.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/deltatype\/direction","title":"case direction","type":"case"},{"path":"\/documentation\/swifttracer\/lightcategory\/deltatype\/position","title":"case position","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/deltatype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/deltatype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/lightcategory\/deltatype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/deltatype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/lightcategory\/deltatype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/lightcategory\/deltatype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/lightcategory\/deltatype","title":"LightCategory.DeltaType","type":"enum"}],"path":"\/documentation\/swifttracer\/lightcategory","title":"LightCategory","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/pdf\/cone(v:thetamax:)","title":"static func cone(v: Vec3, thetaMax: Float) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/pdf\/cosinehemisphere(v:)","title":"static func cosineHemisphere(v: Vec3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/pdf\/cosinehemispherepower(v:power:)","title":"static func cosineHemispherePower(v: Vec3, power: Float) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/pdf\/hemisphere(v:)","title":"static func hemisphere(v: Vec3) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/pdf\/spherical(_:)","title":"static func spherical(Vec3) -> Float","type":"method"}],"path":"\/documentation\/swifttracer\/pdf","title":"Pdf","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/render\/run(input:output:)","title":"static func run(input: Scene.Example, output: String)","type":"method"}],"path":"\/documentation\/swifttracer\/render","title":"Render","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/sample\/cone(sample:thetamax:)","title":"static func cone(sample: Vec2, thetaMax: Float) -> Vec3","type":"method"},{"path":"\/documentation\/swifttracer\/sample\/cosinehemisphere(sample:)","title":"static func cosineHemisphere(sample: Vec2) -> Vec3","type":"method"},{"path":"\/documentation\/swifttracer\/sample\/cosinehemispherepower(sample:power:)","title":"static func cosineHemispherePower(sample: Vec2, power: Float) -> Vec3","type":"method"},{"path":"\/documentation\/swifttracer\/sample\/hemisphere(sample:)","title":"static func hemisphere(sample: Vec2) -> Vec3","type":"method"},{"path":"\/documentation\/swifttracer\/sample\/spherical(sample:)","title":"static func spherical(sample: Vec2) -> Vec3","type":"method"}],"path":"\/documentation\/swifttracer\/sample","title":"Sample","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/utils\/directionfrom(phi:theta:)","title":"static func directionFrom(phi: Float, theta: Float) -> Vec3","type":"method"},{"path":"\/documentation\/swifttracer\/utils\/directiontopixel(d:imagesize:)","title":"static func directionToPixel(d: Vec3, imageSize: Vec2) -> Vec2","type":"method"},{"path":"\/documentation\/swifttracer\/utils\/generatehistogram(pdffunc:samplefunc:nsp:sampler:)","title":"static func generateHistogram(pdfFunc: (Vec3) -> Float, sampleFunc: (Vec2) -> Vec3, nsp: Int, sampler: Sampler) -> (Array2d<Color>, Array2d<Color>, Array2d<Color>)","type":"method"},{"path":"\/documentation\/swifttracer\/utils\/pixeltodirection(p:imagesize:)","title":"static func pixelToDirection(p: Vec2, imageSize: Vec2) -> Vec3","type":"method"},{"path":"\/documentation\/swifttracer\/utils\/sphericalcoordinatesfrom(direction:)","title":"static func sphericalCoordinatesFrom(direction: Vec3) -> (Float, Float)","type":"method"}],"path":"\/documentation\/swifttracer\/utils","title":"Utils","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/float\/ispair","title":"var isPair: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/float\/abs()","title":"func abs() -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/float\/acos()","title":"func acos() -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/float\/clamped(_:_:)","title":"func clamped(Float, Float) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/float\/cos()","title":"func cos() -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/float\/modulo(_:)","title":"func modulo(Float) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/float\/pow(_:)","title":"func pow(Float) -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/float\/sin()","title":"func sin() -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/float\/sqrt()","title":"func sqrt() -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/float\/todegrees()","title":"func toDegrees() -> Float","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/float\/toradians()","title":"func toRadians() -> Float","type":"method"}],"path":"\/documentation\/swifttracer\/swift\/float","title":"Float","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/keyeddecodingcontainer\/contains(any:)","title":"func contains(any: [K]) -> Bool","type":"method"}],"path":"\/documentation\/swifttracer\/swift\/keyeddecodingcontainer","title":"KeyedDecodingContainer","type":"extension"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys\/x","title":"case x","type":"case"},{"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys\/y","title":"case y","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/swift\/simd2\/codingkeys","title":"SIMD2.CodingKeys","type":"enum"}],"path":"\/documentation\/swifttracer\/swift\/simd2","title":"SIMD2","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/hascolor","title":"var hasColor: Bool","type":"property"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/hasnan","title":"var hasNaN: Bool","type":"property"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/isfinite","title":"var isFinite: Bool","type":"property"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/length","title":"var length: Float","type":"property"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/lengthsquared","title":"var lengthSquared: Float","type":"property"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/luminance","title":"var luminance: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/cross(_:)","title":"func cross(Vec3) -> Vec3","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/distance(_:)","title":"func distance(Point3) -> Scalar","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/distance2(_:)","title":"func distance2(Point3) -> Scalar","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/dot(_:)","title":"func dot(Vec3) -> Scalar","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/extend(scalar:)","title":"func extend(scalar: Float) -> Vec4","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/normalized()","title":"func normalized() -> Vec3","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/reflect(n:)","title":"func reflect(n: Vec3) -> Vec3","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/tohomogeneous()","title":"func toHomogeneous() -> Vec4","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/visible(from:within:)","title":"func visible(from: `Self`, within: Scene) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/fromhomogeneous(vector:)","title":"static func fromHomogeneous(vector: Vec4) -> Point3","type":"method"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/unit(_:)","title":"static func unit(Axis) -> Vec3","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/axis\/x","title":"case x","type":"case"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/axis\/y","title":"case y","type":"case"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/axis\/z","title":"case z","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/simd3\/axis\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/swift\/simd3\/axis\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/swift\/simd3\/axis","title":"SIMD3.Axis","type":"enum"}],"path":"\/documentation\/swifttracer\/swift\/simd3","title":"SIMD3","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/swift\/simd4\/truncate()","title":"func truncate() -> Vec3","type":"method"}],"path":"\/documentation\/swifttracer\/swift\/simd4","title":"SIMD4","type":"extension"}],"path":"\/documentation\/swifttracer\/swift","title":"Swift","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/simd\/simd_float3x3\/identity()","title":"static func identity() -> Mat3","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/simd\/simd_float3x3\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/swifttracer\/simd\/simd_float3x3\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/simd\/simd_float3x3\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/swifttracer\/simd\/simd_float3x3\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/simd\/simd_float3x3","title":"simd_float3x3","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/identity()","title":"static func identity() -> Mat4","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/at","title":"case at","type":"case"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/axis","title":"case axis","type":"case"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/from","title":"case from","type":"case"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/matrix","title":"case matrix","type":"case"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/o","title":"case o","type":"case"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/rotation","title":"case rotation","type":"case"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/scale","title":"case scale","type":"case"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/to","title":"case to","type":"case"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/translate","title":"case translate","type":"case"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/up","title":"case up","type":"case"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/x","title":"case x","type":"case"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/y","title":"case y","type":"case"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/z","title":"case z","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/codingkeys","title":"simd_float4x4.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/swifttracer\/simd\/simd_float4x4\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/swifttracer\/simd\/simd_float4x4","title":"simd_float4x4","type":"extension"}],"path":"\/documentation\/swifttracer\/simd","title":"simd","type":"extension"}],"path":"\/documentation\/swifttracer","title":"SwiftTracer","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}