{"hierarchy":{"paths":[["doc:\/\/SwiftTracer\/documentation\/SwiftTracer","doc:\/\/SwiftTracer\/documentation\/SwiftTracer\/AnyIntegrator","doc:\/\/SwiftTracer\/documentation\/SwiftTracer\/AnyIntegrator\/CodingKeys"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"?(","kind":"text"},{"text":"stringValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"platforms":["macOS"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swifttracer\/anyintegrator\/codingkeys\/init(stringvalue:)"]}],"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftTracer\/documentation\/SwiftTracer\/AnyIntegrator\/CodingKeys\/init(stringValue:)"},"metadata":{"role":"symbol","title":"init(stringValue:)","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"stringValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"symbolKind":"init","modules":[{"name":"SwiftTracer"}],"externalID":"s:11SwiftTracer13AnyIntegratorV10CodingKeysO11stringValueAESgSS_tcfc"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"CodingKey.init(stringValue:)","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://SwiftTracer/documentation/SwiftTracer/AnyIntegrator":{"type":"topic","identifier":"doc:\/\/SwiftTracer\/documentation\/SwiftTracer\/AnyIntegrator","title":"AnyIntegrator","url":"\/documentation\/swifttracer\/anyintegrator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyIntegrator"}],"navigatorTitle":[{"kind":"identifier","text":"AnyIntegrator"}],"abstract":[{"text":"Â Box type for ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftTracer\/documentation\/SwiftTracer\/Integrator"},{"type":"text","text":" protocol that allows to decode integrators in a type agnostic way."}],"kind":"symbol"},"doc://SwiftTracer/documentation/SwiftTracer/AnyIntegrator/CodingKeys":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"}],"navigatorTitle":[{"text":"CodingKeys","kind":"identifier"}],"identifier":"doc:\/\/SwiftTracer\/documentation\/SwiftTracer\/AnyIntegrator\/CodingKeys","title":"AnyIntegrator.CodingKeys","url":"\/documentation\/swifttracer\/anyintegrator\/codingkeys","abstract":[],"role":"symbol"},"doc://SwiftTracer/documentation/SwiftTracer":{"title":"SwiftTracer","url":"\/documentation\/swifttracer","role":"collection","identifier":"doc:\/\/SwiftTracer\/documentation\/SwiftTracer","abstract":[{"type":"text","text":"A physically based rendering engine."}],"type":"topic","kind":"symbol"},"doc://SwiftTracer/documentation/SwiftTracer/Integrator":{"identifier":"doc:\/\/SwiftTracer\/documentation\/SwiftTracer\/Integrator","role":"symbol","kind":"symbol","abstract":[],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Integrator"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Integrator","kind":"identifier"}],"url":"\/documentation\/swifttracer\/integrator","title":"Integrator"},"doc://SwiftTracer/documentation/SwiftTracer/AnyIntegrator/CodingKeys/init(stringValue:)":{"identifier":"doc:\/\/SwiftTracer\/documentation\/SwiftTracer\/AnyIntegrator\/CodingKeys\/init(stringValue:)","title":"init(stringValue:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"text":"stringValue","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","abstract":[],"url":"\/documentation\/swifttracer\/anyintegrator\/codingkeys\/init(stringvalue:)","kind":"symbol"}}}